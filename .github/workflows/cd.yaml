name: Node.js CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }} - ${{secrets.HOST}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts


      - name: Login to the GitHub Packages Docker Registry
        run: ssh ${{secrets.USER}}@${{secrets.HOST}} "docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_TOKEN}}"

      - name: Pull latest container
        run: |
          ssh ${{secrets.USER}}@${{secrets.HOST}} "docker pull ${{secrets.DOCKER_REPO}}/${{secrets.DOCKER_REPO}}:${{secrets.DOCKER_TAG}}"

      - name: Stop deployed container
        continue-on-error: true
        run: |
          ssh ${{secrets.USER}}@${{secrets.HOST}} "docker stop ${{secrets.CONTAINER}}"

      - name: Remove deployed container
        continue-on-error: true
        run: |
          ssh ${{secrets.USER}}@${{secrets.HOST}} "docker rm ${{secrets.CONTAINER}}"

      - name: Start docker container
        run: |
          ssh ${{secrets.USER}}@${{secrets.HOST}} "docker run -p 8080:8080 -d --name=${{secrets.CONTAINER}} ${{secrets.REGISTRY}}/${{secrets.REPO}}:${{secrets.DOCKER_TAG}}"

      - name: Logout from the GitHub Packages Docker Registry
        run: ssh ${{secrets.USER}}@${{secrets.HOST}} "docker logout ${{secrets.REGISTRY}}"